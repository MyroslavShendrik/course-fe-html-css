console.log(
    '%c 1.Поняття функції.       \n   Функціональний вираз.  ',
    'color: white; background-color: #D33F49',
);

//! Поняття функції
console.warn("Поняття функції: \n https://ruslan379.github.io/course-fe-html-css/lesson-FE3_09/images/function.png");
//? Функція - це підпрограма, незалежна частина коду,
//? призначена для багаторазового виконання конкретної задачі
//? з різними початковими значеннями.
//? Функції дозволяють структурувати великі програми,
//? зменшують повторення та ізолюють код.
//? Функцію можна уявити у вигляді чорного ящика:
// вона отримує щось на вході(дані) і повертає щось
// на виході(результат виконання коду всередині неї).
console.log(". . . . . . . . . . . . . . . . . . . .");

//! Функціональний вираз
console.warn("Функціональний вираз:");
//? Функціональний вираз(function expression) —
//? звичайне оголошення змінної, значення якої буде функція.
//? Має таку структуру:
//? - ключове слово const,
//? - ім'я функції — це дієслово,
//?   що відповідає на питання "Що зробити?"
//? - ключове слово function
//? - пара круглих дужок(), в яких можуть бути параметрм
//? - тіло функції у фігурних дужках { }

const add = function (a, b, c) {
    console.log("Це функція 'add'");

};
console.log("add:", add);
console.log("---------------------------------------");


//! Виклик функції
console.warn("Виклик функції:");
//? функція викликається за допомогою
//? імені та круглих дужок,
//? всередині яких можуть бути передані аргументи.
add();
const functionCall = add();
console.log("functionCall:", functionCall);
console.log("---------------------------------------");


//! Оператор return 
console.warn("Оператор return :");
//? Оператор return визначає значення, що повертається.
//? Коли інтерпретатор доходить до return,
//? він відразу ж виходить з функції,
//? і повертає це значення в те місце коду,
//? де функція була викликана.
const add2 = function (a, b, c) {
    console.log("Це функція 'add2'");
    return a + b + c;
};
add2();
console.log("Виклик функції add:", add2());
const functionCall2 = add2();
console.log("functionCall2:", functionCall2);
console.log(". . . . . . . . . . . . . . . . . . . .");

add2(1, 2, 3);
console.log("Виклик функції add:", add2(1, 2, 3));
const functionCall21 = add2(1, 2, 3);
console.log("functionCall21:", functionCall21);
console.log("---------------------------------------");

