console.log(
    '%c 1.Події клавіатури:       \n   Властивості key і code.​ \n   Клавіші-модифікатори.   ',
    'color: white; background-color: #D33F49',
);

//! Події клавіатури keydown і keyup
console.warn("Події клавіатури keydown і keyup​:");
//? ✴️ Існує дві основні події клавіатури:
//? keydown і keyup.
//? ✴️ На відміну від інших, події клавіатури
//? обробляються на документі,
//? а не на конкретному елементі.
//? Об'єкти подій клавіатури походять
//? від базового класу KeyboardEvent.
console.log(
    `%c
    document.addEventListener("keydown", event => {
        console.log("Keydown: ", event);
    });

    document.addEventListener("keyup", event => {
        console.log("Keyup: ", event);
    });
    `,
    'color: blue; font-size: 16px',
);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");
//? ✴️ Натискаючи клавішу, спочатку відбувається keydown,
//? після чого - keyup, коли клавішу відпустили.
//? На практиці переважно обробляють тільки подію keydown,
//? оскільки вона відбувається швидше за keyup,
//? і користувач раніше бачить результат натискання.
//? ✴️ Події keydown і keyup спрацьовують при натисканні
//? будь-якої клавіші, включно зі службовими (Ctrl, Shift, Alt, Escape тощо).
console.log("Натисни будь-яку клавішу");
document.addEventListener("keydown", event => {
    console.log("Keydown: ", event);
});

document.addEventListener("keyup", event => {
    console.log("Keyup: ", event);
    console.log("-----------------------------------------------------------------------------------------------------");
});
console.log("-----------------------------------------------------------------------------------------------------");


//! Подія клавіатури - keypress
console.warn("Подія клавіатури - keypress​:");
//? ✳️ Раніше була ще одна подія клавіатури - keypress.
//? Більшість постів на форумах і блогах
//? все ще можуть її використовувати,
//? але будьте обережні - вона застаріла
//? і підтримка у нових браузерах
//? може припинитися в будь-який момент.
console.log(
    `%c
    document.addEventListener("keypress", event => {
        console.log("Keypress: ", event);
    });
    `,
    'color: darkred; font-size: 16px',
);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");
document.addEventListener("keypress", event => {
    console.log("Keypress: ", event);
});
console.log("-----------------------------------------------------------------------------------------------------");


//! Властивості key і code
console.warn("Властивості key і code​:");
//? ✴️ Властивість key повертає символ, 
//? згенерований натисканням клавіші, 
//? враховуючи стан клавіш-модифікаторів, 
//? наприклад, Shift, а також поточну мову. 
//? Властивість code повертає 
//? код фізичної клавіші на клавіатурі 
//? і не залежить від мови.
document.addEventListener("keydown", event => {
    console.log("key: ", event.key);
    console.log("code: ", event.code);
});
console.log("-----------------------------------------------------------------------------------------------------");


//! Клавіші-модифікатори
console.warn("Клавіші-модифікатори​:");
//? ✴️ Для обробки комбінації клавіш,
//? наприклад Ctrl + s або будь-якої іншої,
//? на об'єкті події є властивості
//? ctrlKey, altKey, shiftkey і metaKey,
//? що зберігають булеве значення,
//? яке сигналізує про те, чи була затиснута клавіша-модифікатор.
//? ✴️ Деякі комбінації клавіш 
//? можуть конфліктувати з поведінкою браузера за замовчуванням. 
//? Наприклад, Ctrl + d або Command + d робить закладку. 
//? Потрібно намагатися проектувати систему комбінацій сторінки таким чином,
//?  щоб вона не перетиналася із вбудованою у браузері. 
//? Але, у крайньому разі, поведінку за замовчуванням можна скасувати, 
//? викликавши метод event.preventDefault().
document.addEventListener("keydown", event => {
    event.preventDefault();
    if ((event.ctrlKey || event.metaKey) && event.code === "KeyS") {
        console.log("«Ctrl + s» or «Command + s» combo");
    }
});

console.log("-----------------------------------------------------------------------------------------------------");
