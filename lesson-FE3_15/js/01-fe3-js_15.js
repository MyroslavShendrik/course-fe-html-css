console.log(
    '%c 1.–ú–µ—Ç–æ–¥ reduce(). ',
    'color: white; background-color: #D33F49',
);

//! 1.–ú–µ—Ç–æ–¥ reduce()
console.warn("–°–∏–Ω—Ç–∞–∫—Å–∏—Å –º–µ—Ç–æ–¥—É reduce():");
//? ‚ú¥Ô∏è –ú–µ—Ç–æ–¥ reduce(callback, initialValue)
//? –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É
//? —ñ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º –ø—Ä–æ–º—ñ–∂–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É, —è–∫ –∞–∫—É–º—É–ª—è—Ç–æ—Ä.
//? –¢—Ä–æ—Ö–∏ —Å–∫–ª–∞–¥–Ω—ñ—à–∏–π –∑–∞ —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è –∑–∞—Å–≤–æ—î–Ω–Ω—è,
//? –∞–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—Ä—Ç–∏–π —Ç–æ–≥–æ.
//? üî∏ –ü–æ–µ–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤.
//? üî∏ –ù–µ –∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤.
//? üî∏ –†–æ–±–∏—Ç—å –≤—Å–µ, —â–æ –∑–∞–≤–≥–æ–¥–Ω–æ.
//? üî∏ –ü–æ–≤–µ—Ä—Ç–∞—î —â–æ –∑–∞–≤–≥–æ–¥–Ω–æ.
//? ‚ú≥Ô∏è –ê—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó - —Ü–µ:
//? üîπ –ü–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó
//?    (previousValue) - —Ü–µ –∞–∫—É–º—É–ª—è—Ç–æ—Ä, —Ç–æ–±—Ç–æ –ø—Ä–æ–º—ñ–∂–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
//?    –ó–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –ø–æ–≤–µ—Ä–Ω–µ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—è –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó,
//?    –±—É–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è–º —Ü—å–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó.
//? üîπ –Ω–∞—Å—Ç—É–ø–Ω–∏–π - –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ element,
//? üîπ –π–æ–≥–æ —ñ–Ω–¥–µ–∫—Å index
//? üîπ —ñ –≤–ª–∞—Å–Ω–µ –≤–∏—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤ array.
//? üîπ –î—Ä—É–≥–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞
//?    - –ø–∞—Ä–∞–º–µ—Ç—Ä initialValue.
console.log(
    `%c
    –º–∞—Å–∏–≤.reduce((previousValue, element, index, array) => {
        // —Ç—ñ–ª–æ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó
    }, initialValue);
    `,
    'color: blue; font-size: 18px',
);

console.warn("–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–µ—Ç–æ–¥–∞ reduce():");
//? ‚ú≥Ô∏è –ù–∞–π–ª–µ–≥—à–µ —É—è–≤–∏—Ç–∏ –π–æ–≥–æ —Ä–æ–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ reduce()
//? –Ω–∞ –ø—Ä–∏–∫–ª–∞–¥—ñ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å—É–º–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É.
//? ‚ú≥Ô∏è –°–ø–æ—á–∞—Ç–∫—É –º–µ—Ç–æ–¥ reduce()
//? —Å—Ç–≤–æ—Ä—é—î –≤–Ω—É—Ç—Ä—ñ—à–Ω—é –∑–º—ñ–Ω–Ω—É-–∞–∫—É–º—É–ª—è—Ç–æ—Ä (previousValue)
//? —ñ –ø—Ä–∏—Å–≤–æ—é—î —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ initialValue
//? –∞–±–æ –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É, —â–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î—Ç—å—Å—è,
//? —è–∫—â–æ initialValue –Ω–µ –∑–∞–¥–∞–Ω–µ.
//? üîπ previousValue = initialValue = 0; (–∞–±–æ previousValue = array(0) = 2).
//? –ü–æ—Ç—ñ–º –∫–æ–ª–±–µ–∫ - —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É.
//? –ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ previousValue
//? - —Ü–µ —Ç–µ, —â–æ –ø–æ–≤–µ—Ä–Ω—É–ª–∞ –∫–æ–ª–±–µ–∫ - —Ñ—É–Ω–∫—Ü—ñ—è –Ω–∞ –º–∏–Ω—É–ª—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó.
//?     üîπ –Ü—Ç–µ—Ä–∞—Ü—ñ—è 1 -> previousValue = 0 -> number = 2 -> return 0 + 2 -> return 2
//?     üîπ –Ü—Ç–µ—Ä–∞—Ü—ñ—è 2 -> previousValue = 2 -> number = 7 -> return 2 + 7 -> return 9
//?     üîπ –Ü—Ç–µ—Ä–∞—Ü—ñ—è 3 -> previousValue = 9 -> number = 3 -> return 9 + 3 -> return 12
//?     üîπ –Ü—Ç–µ—Ä–∞—Ü—ñ—è 4 -> previousValue = 12 -> number = 14 -> return 12 + 14 -> return 26
//?     üîπ –Ü—Ç–µ—Ä–∞—Ü—ñ—è 5 -> previousValue = 26 -> number = 6 -> return 26 + 6 -> return 32
//? –ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–µ—Ä–µ–±–∏—Ä–∞–Ω–Ω—è –≤—Å—å–æ–≥–æ –º–∞—Å–∏–≤—É, –º–µ—Ç–æ–¥ reduce() –ø–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞.
//?       –†–µ–∑—É–ª—å—Ç–∞—Ç = 32
const array = [2, 7, 3, 14, 6];
console.log("array:", array);
console.log("`  `  `  `  `  `  `  `  `  `  `  `  `  `  `  `  `  `  `  `")

const total = array.reduce((previousValue, number, index) => {
    console.log(`Iteration-${index + 1}:  previousValue: ${previousValue},  number: ${number}  ->  return ${previousValue + number}`);
    return previousValue + number;
}, 0);

console.log("total:", total); //! 32
//? ‚ú≥Ô∏è –¢–æ–±—Ç–æ –º–µ—Ç–æ–¥ reduce() –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è,
//? –∫–æ–ª–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∑—è—Ç–∏ ¬´–±–∞–≥–∞—Ç–æ¬ª —ñ –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–æ ¬´–æ–¥–Ω–æ–≥–æ¬ª.
//? –£ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—è—Ö –π–æ–≥–æ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–≤–æ–¥–∏—Ç—å—Å—è –¥–æ —Ä–æ–±–æ—Ç–∏ –∑ —á–∏—Å–ª–∞–º–∏.
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");


//? ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è –í–∞–∂–ª–∏–≤–∏–π –ø—Ä–∏–∫–ª–∞–¥ –≤—ñ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –º–µ—Ç–æ–¥–∞ reduce():
console.warn("–ü—Ä–∏–∫–ª–∞–¥-1: –í–Ü–†–ù–Ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –º–µ—Ç–æ–¥–∞ reduce():");
//todo var.1
function example1(arr) {
    arr.reduce((acc, element, index) => {
        console.log(`Acc: ${acc}; Index-${index}:  Element: ${element}`);
    }, undefined);
}
example1(["–†–æ–±—ñ—Ç–Ω–∏–∫1", "–†–æ–±—ñ—Ç–Ω–∏–∫2", "–†–æ–±—ñ—Ç–Ω–∏–∫3"]);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");


console.warn("–ü—Ä–∏–∫–ª–∞–¥-2: –ü–û–ú–ò–õ–ö–û–í–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –º–µ—Ç–æ–¥–∞ reduce():");
//todo var.2 
function example2(arr) {
    arr.reduce((element, index) => {
        console.log(`Index-${index}:  Element: ${element}`); //todo var.2
    }, undefined);
};
example2(["–†–æ–±—ñ—Ç–Ω–∏–∫1", "–†–æ–±—ñ—Ç–Ω–∏–∫2", "–†–æ–±—ñ—Ç–Ω–∏–∫3"]);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");


//! –ú–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
console.warn("–ú–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤:");
//? ‚ú≥Ô∏è –ü—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –∑ –º–∞—Å–∏–≤–æ–º –æ–±'—î–∫—Ç—ñ–≤
//? –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è —Ä–µ–¥—É–∫—É–≤–∞–Ω–Ω—è (–∑–º—ñ–Ω—é–≤–∞–Ω–Ω—è –≤ –±—ñ–∫ –∑–º–µ–Ω—à–µ–Ω–Ω—è)
//? –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø–µ–≤–Ω–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ.
//? –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —É –Ω–∞—Å —î –º–∞—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ –±–∞–ª–∞–º–∏ –∑–∞ —Ç–µ—Å—Ç.
//? –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª.
const students = [
    { name: "–ú–∞–Ω–≥–æ", score: 83 },
    { name: "–ü–æ–ª—ñ", score: 59 },
    { name: "–ê—è–∫—Å", score: 37 },
    { name: "–ö—ñ–≤—ñ", score: 94 },
    { name: "–•'—é—Å—Ç–æ–Ω", score: 64 },
];
console.log("students:", students);
console.log("`  `  `  `  `  `  `  `  `  `  `  `  `  `  `");


//todo: –ù–∞–∑–≤–∞ –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞ –º–æ–∂–µ –±—É—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω–æ—é, —Ü–µ –ø—Ä–æ—Å—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ—ó
const totalScore = students.reduce((total, student) => {
    return total + student.score;
}, 0);
console.log("totalScore:", totalScore); //! 337

const averageScore = totalScore / students.length; //! 67.4
console.log("averageScore:", averageScore);
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");


//! –ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (—Å—É–º–∞ —É—Å—ñ—Ö –ª–∞–π–∫—ñ–≤)
console.warn("–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (—Å—É–º–∞ —É—Å—ñ—Ö –ª–∞–π–∫—ñ–≤):");
//? ‚ú≥Ô∏è –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ —É –Ω–∞—Å —î –Ω–∞—Å—Ç—É–ø–Ω–∞ –∑–∞–¥–∞—á–∞:
//? –∑ –º–∞—Å–∏–≤—É –ø–æ—Å—Ç—ñ–≤ —Ç–≤—ñ—Ç—Ç–µ—Ä–∞ –æ–∫—Ä–µ–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
//? –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É —É—Å—ñ—Ö –ª–∞–π–∫—ñ–≤.
//? –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ —Ü–∏–∫–ª–æ–º for –∞–±–æ forEach,
//? –∫–æ–∂–Ω–µ –∑ —Ü–∏—Ö —Ä—ñ—à–µ–Ω—å –≤–∏–º–∞–≥–∞—Ç–∏–º–µ
//? –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –∫–æ–¥—É.
//? –ê –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ reduce.
const tweets1 = [
    { id: "000", likes: 5, tags: ["js", "nodejs"] },
    { id: "001", likes: 2, tags: ["html", "css"] },
    { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
    { id: "003", likes: 8, tags: ["css", "react"] },
    { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
];
console.log("tweets1:", tweets1);
console.log("`  `  `  `  `  `  `  `  `  `  `  `  `  `  `");

//todo: –ü—Ä–æ–π–¥–µ–º–æ –ø–æ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç–∞—Ö –∫–æ–ª–µ–∫—Ü—ñ—ó —ñ –¥–æ–¥–∞–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ likes
//todo: –¥–æ –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞, –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ–≥–æ –≤–∫–∞–∂–µ–º–æ 0.
const likes = tweets1.reduce((totalLikes, tweet) => totalLikes + tweet.likes, 0);

console.log("likes:", likes); //! 32

//todo: –ú–∞–±—É—Ç—å, –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –ª–∞–π–∫—ñ–≤ - –Ω–µ –æ–¥–∏–Ω–æ—á–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è, —Ç–æ–º—É –Ω–∞–ø–∏—à–µ–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
//todo: –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –ª–∞–π–∫—ñ–≤ –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
const countLikes = tweets => {
    return tweets.reduce((totalLikes, tweet) => totalLikes + tweet.likes, 0);
};

console.log("likes with countLikes:", countLikes(tweets1)); //! 32
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");

//! –ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (–º–∞—Å–∏–≤ —É—Å—ñ—Ö —Ç–µ–≥—ñ–≤)
console.warn("–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (–º–∞—Å–∏–≤ —É—Å—ñ—Ö —Ç–µ–≥—ñ–≤):");
//? ‚ú≥Ô∏è –ü—Ä–æ–¥–æ–≤–∂—É—é—á–∏ —Ç–µ–º—É reduce, 
//? –º–∏ –∑–±–µ—Ä–µ–º–æ –≤ –º–∞—Å–∏–≤ —É—Å—ñ —Ç–µ–≥–∏, 
//? —è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –≤ –ø–æ—Å—Ç–∞—Ö.
const tweets2 = [
    { id: "000", likes: 5, tags: ["js", "nodejs"] },
    { id: "001", likes: 2, tags: ["html", "css"] },
    { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
    { id: "003", likes: 8, tags: ["css", "react"] },
    { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
];
console.log("tweets2:", tweets2);
console.log("`  `  `  `  `  `  `  `  `  `  `  `  `  `  `")

//todo: –ü—Ä–æ–π–¥–µ–º–æ –ø–æ –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç–∞—Ö –∫–æ–ª–µ–∫—Ü—ñ—ó —ñ –¥–æ–¥–∞–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ tags
//todo: –¥–æ –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞, –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ–≥–æ –≤–∫–∞–∂–µ–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–º –º–∞—Å–∏–≤–æ–º [].
//todo: –ù–∞ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –ø—É—à–∏–º–æ –≤ –∞–∫—É–º—É–ª—è—Ç–æ—Ä —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ tweet.tags —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ.
const tags2 = tweets2.reduce((allTags, tweet) => {
    allTags.push(...tweet.tags);
    return allTags;
}, []);

console.log("tags2:", tags2); //! ['js', 'nodejs', 'html', 'css', 'html', 'js', 'nodejs', 'css', 'react', 'js', 'nodejs', 'react']

//todo: –ú–∞–±—É—Ç—å, –∑–±–∏—Ä–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ - –Ω–µ –æ–¥–∏–Ω–æ—á–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è, —Ç–æ–º—É –Ω–∞–ø–∏—à–µ–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
//todo: –¥–ª—è –∑–±–∏—Ä–∞–Ω–Ω—è —Ç–µ–≥—ñ–≤ –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
const getTags2 = tweets2 =>
    tweets2.reduce((allTags, tweet) => {
        allTags.push(...tweet.tags);
        return allTags;
    }, []);

console.log("Tags-2 with countLikes:", getTags2(tweets2)); //! ['js', 'nodejs', 'html', 'css', 'html', 'js', 'nodejs', 'css', 'react', 'js', 'nodejs', 'react']
console.log(". . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .");


//! –ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (–æ–±'—î–∫—Ç —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ç–µ–≥—ñ–≤)
console.warn("–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π reduce (–æ–±'—î–∫—Ç —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö  —Ç–µ–≥—ñ–≤):");
//? ‚ú≥Ô∏è –ü—Ä–æ–¥–æ–≤–∂—É—é—á–∏ —Ç–µ–º—É reduce, 
//? –º–∏ –∑–±–µ—Ä–µ–º–æ –≤ –º–∞—Å–∏–≤ —É—Å—ñ —Ç–µ–≥–∏, 
//? —è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –≤ –ø–æ—Å—Ç–∞—Ö.
const tweets3 = [
    { id: "000", likes: 5, tags: ["js", "nodejs"] },
    { id: "001", likes: 2, tags: ["html", "css"] },
    { id: "002", likes: 17, tags: ["html", "js", "nodejs"] },
    { id: "003", likes: 8, tags: ["css", "react"] },
    { id: "004", likes: 0, tags: ["js", "nodejs", "react"] },
];
console.log("tweets3:", tweets3);
console.log("`  `  `  `  `  `  `  `  `  `  `  `  `  `  `");

const getTags3 = tweets =>
    tweets.reduce((allTags, tweet) => {
        allTags.push(...tweet.tags);
        return allTags;
    }, []);

const tags3 = getTags3(tweets3);
console.log("Tags-3 with countLikes:", tags3); //! ['js', 'nodejs', 'html', 'css', 'html', 'js', 'nodejs', 'css', 'react', 'js', 'nodejs', 'react']

//todo: –í–∏–Ω–µ—Å–µ–º–æ callback-—Ñ—É–Ω–∫—Ü—ñ—é –æ–∫—Ä–µ–º–æ, –∞ –≤ reduc–µ –ø–µ—Ä–µ–¥–∞–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–µ—ó.
//todo: –¶–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞, —è–∫—â–æ callback-—Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å–∏—Ç—å –≤–µ–ª–∏–∫–∞.

//todo: –Ø–∫—â–æ –≤ –æ–±'—î–∫—Ç—ñ-–∞–∫—É–º—É–ª—è—Ç–æ—Ä—ñ acc –≤—ñ–¥—Å—É—Ç–Ω—è —Å–≤–æ—è –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –∑ –∫–ª—é—á–µ–º tag,
//todo: —Ç–æ —Å—Ç–≤–æ—Ä—é—î–º–æ —ó—ó —ñ –∑–∞–ø–∏—Å—É—î–º–æ —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è 0.
//todo: –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –∑–±—ñ–ª—å—à—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ 1.
const getTagStats = (acc, tag) => {
    if (!acc.hasOwnProperty(tag)) {
        acc[tag] = 0;
    };
    acc[tag] += 1;
    return acc;
};

//todo: –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∞–∫—É–º—É–ª—è—Ç–æ—Ä–∞ - —Ü–µ –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±'—î–∫—Ç {}
const countTags = tags => tags.reduce(getTagStats, {});

const tagCount = countTags(tags3);
console.log("tagCount:", tagCount); //! {js: 3, nodejs: 3, html: 2, css: 2, react: 2}
console.log("-------------------------------------------------------------");